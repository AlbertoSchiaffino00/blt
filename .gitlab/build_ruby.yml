####
# This is the share configuration of jobs for ruby
.on_ruby:
  tags:
    - shell
    - ruby
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /_qnone/ || $ON_RUBY == "OFF"' #run except if ...
      when: never
    - if: '$CI_JOB_NAME =~ /ruby_release/'
      when: always
    - when: on_success

####
# In pre-build phase, allocate a node for builds
ruby_allocate:
  variables:
    GIT_STRATEGY: none
  extends: [.on_ruby]
  stage: allocate
  script:
    - salloc -p pdebug -N 1 -t 10 --no-shell --job-name=${PROJECT_ALLOC_NAME} --mpibind=off
  needs: []

####
# In post-build phase, deallocate resources
# Note : make sure this is run even on build phase failure
ruby_release:
  variables:
    GIT_STRATEGY: none
  extends: [.on_ruby]
  stage: release
  script:
    - export JOBID=$(squeue -h --name=${PROJECT_ALLOC_NAME} --format=%A)
    - if [[ -n "${JOBID}" ]]; then scancel ${JOBID}; fi

####
# Template
.build_on_ruby:
  stage: build
  variables:
    ALLOC_COMMAND: "srun -p pdebug -t 10 -N 1 ${ASSIGN_ID} --interactive"
  extends: [.build_script, .on_ruby]
  needs: [ruby_allocate]

####
# Build jobs
ruby-clang_10_0_1:
  variables:
    HOST_CONFIG: "clang@10.0.1.cmake"
  extends: [.build_on_ruby]

ruby-gcc_8_3_1:
  variables:
    HOST_CONFIG: "gcc@8.3.1.cmake"
  extends: [.build_on_ruby]

ruby-gcc_8_3_1_export_tpls:
  variables:
    HOST_CONFIG: "gcc@8.3.1-export-tpls.cmake"
  extends: [.build_on_ruby]

ruby-inteloneapi_2021_3:
  variables:
    HOST_CONFIG: "intel-oneapi@2021.3.cmake"
  extends: [.build_on_ruby]

ruby-inteloneapi_2021_3_cxx17:
  variables:
    HOST_CONFIG: "intel-oneapi@2021.3-c++17.cmake"
  extends: [.build_on_ruby]
