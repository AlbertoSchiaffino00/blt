diff --git a/thirdparty_builtin/googletest/googletest/src/gtest-internal-inl.h b/thirdparty_builtin/googletest/googletest/src/gtest-internal-inl.h
index 16841b5..89d5c60 100644
--- a/thirdparty_builtin/googletest/googletest/src/gtest-internal-inl.h
+++ b/thirdparty_builtin/googletest/googletest/src/gtest-internal-inl.h
@@ -636,8 +636,9 @@ class GTEST_API_ UnitTestImpl {
   // For example, if Foo() calls Bar(), which in turn calls
   // CurrentOsStackTraceExceptTop(1), Foo() will be included in the
   // trace but Bar() and CurrentOsStackTraceExceptTop() won't.
+  // BLT UPDATE: remove GTEST_NO_TAIL_CALL_
   std::string CurrentOsStackTraceExceptTop(int skip_count)
-      GTEST_NO_INLINE_ GTEST_NO_TAIL_CALL_;
+      GTEST_NO_INLINE_;
 
   // Finds and returns a TestSuite with the given name.  If one doesn't
   // exist, creates one and returns it.
diff --git a/thirdparty_builtin/googletest/googletest/src/gtest.cc b/thirdparty_builtin/googletest/googletest/src/gtest.cc
index 15cee3f..954285d 100644
--- a/thirdparty_builtin/googletest/googletest/src/gtest.cc
+++ b/thirdparty_builtin/googletest/googletest/src/gtest.cc
@@ -6300,7 +6300,8 @@ void UnitTestImpl::UnshuffleTests() {
 // For example, if Foo() calls Bar(), which in turn calls
 // GetCurrentOsStackTraceExceptTop(..., 1), Foo() will be included in
 // the trace but Bar() and GetCurrentOsStackTraceExceptTop() won't.
-GTEST_NO_INLINE_ GTEST_NO_TAIL_CALL_ std::string
+// BLT UPDATE: remove GTEST_NO_TAIL_CALL_
+GTEST_NO_INLINE_ std::string
 GetCurrentOsStackTraceExceptTop(int skip_count) {
   // We pass skip_count + 1 to skip this wrapper function in addition
   // to what the user really wants to skip.
